{"remainingRequest":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\assetCategory\\AssetCategory.vue?vue&type=template&id=4f69c103&scoped=true&","dependencies":[{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\assetCategory\\AssetCategory.vue","mtime":1628900445830},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}