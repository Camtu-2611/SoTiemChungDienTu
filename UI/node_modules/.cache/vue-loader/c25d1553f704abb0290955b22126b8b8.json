{"remainingRequest":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\audit\\AuditDetail.vue?vue&type=template&id=614b1d0e&scoped=true&","dependencies":[{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\audit\\AuditDetail.vue","mtime":1628900445838},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}