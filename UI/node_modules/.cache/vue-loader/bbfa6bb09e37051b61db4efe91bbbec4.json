{"remainingRequest":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\ownerTransfer\\OwnerTransferDetail.vue?vue&type=template&id=5de09c14&scoped=true&","dependencies":[{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\src\\views\\ownerTransfer\\OwnerTransferDetail.vue","mtime":1628781520652},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DOAN\\Project\\SoTiemChungDienTu\\UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}